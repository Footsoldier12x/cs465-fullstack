{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/authentication.service\";\nimport * as i3 from \"@angular/common\";\nfunction TripCardComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TripCardComponent_div_11_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.editTrip(ctx_r1.trip));\n    });\n    i0.ɵɵtext(2, \"Edit\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class TripCardComponent {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n  ngOnInit() {}\n  editTrip(trip) {\n    localStorage.removeItem('tripCode');\n    localStorage.setItem('tripCode', trip.code);\n    this.router.navigate(['edit-trip']);\n  }\n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n  static #_ = this.ɵfac = function TripCardComponent_Factory(t) {\n    return new (t || TripCardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthenticationService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TripCardComponent,\n    selectors: [[\"app-trip-card\"]],\n    inputs: {\n      trip: \"trip\"\n    },\n    decls: 12,\n    vars: 11,\n    consts: [[1, \"card\", \"ml-4\", 2, \"width\", \"18rem\"], [1, \"card-header\"], [\"alt\", \"trip thumbnail\", 1, \"card-img-top\", 3, \"src\"], [1, \"card-body\"], [1, \"card-subtitle\", \"mb-2\", \"text-muted\"], [1, \"card-subtitle\", \"mt-3\", \"mb-3\", \"text-muted\"], [1, \"card-text\", 3, \"innerHTML\"], [4, \"ngIf\"], [1, \"btn\", \"btn-info\", 3, \"click\"]],\n    template: function TripCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"img\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"h6\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\", 5);\n        i0.ɵɵtext(8);\n        i0.ɵɵpipe(9, \"currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"p\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, TripCardComponent_div_11_Template, 3, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.trip.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate1(\"src\", \"assets/images/\", ctx.trip.image, \"\", i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.trip.resort);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\" \", ctx.trip.length, \" only \", i0.ɵɵpipeBind3(9, 7, ctx.trip.perPerson, \"USD\", true), \" per person \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"innerHTML\", ctx.trip.description, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn());\n      }\n    },\n    dependencies: [i3.NgIf, i3.CurrencyPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","TripCardComponent_div_11_Template_button_click_1_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","editTrip","trip","ɵɵtext","ɵɵelementEnd","TripCardComponent","constructor","router","authService","ngOnInit","localStorage","removeItem","setItem","code","navigate","isLoggedIn","_","ɵɵdirectiveInject","i1","Router","i2","AuthenticationService","_2","selectors","inputs","decls","vars","consts","template","TripCardComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","TripCardComponent_div_11_Template","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵpropertyInterpolate1","image","ɵɵsanitizeUrl","resort","ɵɵtextInterpolate2","length","ɵɵpipeBind3","perPerson","ɵɵproperty","description","ɵɵsanitizeHtml"],"sources":["C:\\Users\\jpi\\source\\repos\\CS-465 Travlr project\\travlr\\app_admin\\src\\app\\trip-card\\trip-card.component.ts","C:\\Users\\jpi\\source\\repos\\CS-465 Travlr project\\travlr\\app_admin\\src\\app\\trip-card\\trip-card.component.html"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Trip } from '../models/trip';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-trip-card',\r\n  templateUrl: './trip-card.component.html',\r\n  styleUrls: ['./trip-card.component.css'],\r\n})\r\nexport class TripCardComponent implements OnInit {\r\n  @Input('trip') trip: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthenticationService\r\n  ) {}\r\n  ngOnInit(): void {}\r\n\r\n  protected editTrip(trip: Trip): void {\r\n    localStorage.removeItem('tripCode');\r\n    localStorage.setItem('tripCode', trip.code);\r\n    this.router.navigate(['edit-trip']);\r\n  }\r\n  public isLoggedIn(): boolean {\r\n    return this.authService.isLoggedIn();\r\n  }\r\n}\r\n","<div class=\"card ml-4\" style=\"width: 18rem\">\r\n  <div class=\"card-header\">{{ trip.name }}</div>\r\n  <img\r\n    src=\"assets/images/{{ trip.image }}\"\r\n    alt=\"trip thumbnail\"\r\n    class=\"card-img-top\"\r\n  />\r\n  <div class=\"card-body\">\r\n    <h6 class=\"card-subtitle mb-2 text-muted\">{{ trip.resort }}</h6>\r\n    <p class=\"card-subtitle mt-3 mb-3 text-muted\">\r\n      {{ trip.length }} only {{ trip.perPerson | currency : \"USD\" : true }} per\r\n      person\r\n    </p>\r\n    <p class=\"card-text\" [innerHTML]=\"trip.description\"></p>\r\n  </div>\r\n  <div *ngIf=\"isLoggedIn()\">\r\n    <button (click)=\"editTrip(trip)\" class=\"btn btn-info\">Edit</button>\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}