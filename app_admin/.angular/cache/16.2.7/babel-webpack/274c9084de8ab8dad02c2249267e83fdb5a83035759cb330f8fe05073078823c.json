{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BROWSER_STORAGE } from '../storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TripDataService {\n  constructor(http, storage) {\n    this.http = http;\n    this.storage = storage;\n    this.apiBaseUrl = 'http://localhost:3000/api/';\n    this.tripUrl = `${this.apiBaseUrl}trips/`;\n  }\n  getTrips() {\n    console.log('Inside TripDataService#getTrips');\n    return this.http.get(this.tripUrl).toPromise().then(response => response).catch(this.handleError);\n  }\n  getTrip(tripCode) {\n    console.log('Inside TripDataService#getTrip(tripCode)');\n    return this.http.get(this.tripUrl + tripCode).toPromise().then(response => response).catch(this.handleError);\n  }\n  addTrip(formData) {\n    console.log('Inside TripDataService#addTrip');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${localStorage.getItem('travlr-token')}`\n    });\n    return this.http.post(this.tripUrl, formData, {\n      headers: headers\n    }).toPromise().then(response => response).catch(this.handleError);\n  }\n  updateTrip(formData) {\n    console.log('Inside TripDataService#updateTrip');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${localStorage.getItem('travlr-token')}`\n    });\n    return this.http.put(this.tripUrl + formData.code, formData, {\n      headers: headers\n    }).toPromise().then(response => response).catch(this.handleError);\n  }\n  handleError(error) {\n    console.error('Something has gone wrong', error);\n    return Promise.reject(error.message || error);\n  }\n  login(user) {\n    return this.makeAuthApiCall('login', user);\n  }\n  register(user) {\n    return this.makeAuthApiCall('register', user);\n  }\n  makeAuthApiCall(urlPath, user) {\n    const url = `${this.apiBaseUrl}/${urlPath}`;\n    return this.http.post(url, user).toPromise().then(response => response).catch(this.handleError);\n  }\n  static #_ = this.ɵfac = function TripDataService_Factory(t) {\n    return new (t || TripDataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(BROWSER_STORAGE));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TripDataService,\n    factory: TripDataService.ɵfac\n  });\n}","map":{"version":3,"names":["HttpHeaders","BROWSER_STORAGE","TripDataService","constructor","http","storage","apiBaseUrl","tripUrl","getTrips","console","log","get","toPromise","then","response","catch","handleError","getTrip","tripCode","addTrip","formData","headers","Authorization","localStorage","getItem","post","updateTrip","put","code","error","Promise","reject","message","login","user","makeAuthApiCall","register","urlPath","url","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["C:\\Users\\jpi\\source\\repos\\CS-465 Travlr project\\travlr\\app_admin\\src\\app\\services\\trip-data.service.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\nimport { Trip } from '../models/trip';\r\nimport { BROWSER_STORAGE } from '../storage';\r\nimport { User } from '../models/user';\r\nimport { AuthResponse } from '../models/authresponse';\r\n\r\n@Injectable()\r\nexport class TripDataService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject(BROWSER_STORAGE) private storage: Storage\r\n  ) {}\r\n\r\n  private apiBaseUrl = 'http://localhost:3000/api/';\r\n  private tripUrl = `${this.apiBaseUrl}trips/`;\r\n\r\n  public getTrips(): Promise<Trip[]> {\r\n    console.log('Inside TripDataService#getTrips');\r\n    return this.http\r\n      .get(this.tripUrl)\r\n      .toPromise()\r\n      .then((response) => response as Trip[])\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public getTrip(tripCode: string): Promise<Trip[]> {\r\n    console.log('Inside TripDataService#getTrip(tripCode)');\r\n    return this.http\r\n      .get(this.tripUrl + tripCode)\r\n      .toPromise()\r\n      .then((response) => response as Trip[])\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public addTrip(formData: Trip): Promise<Trip[]> {\r\n    console.log('Inside TripDataService#addTrip');\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${localStorage.getItem('travlr-token')}`,\r\n    });\r\n    return this.http\r\n      .post(this.tripUrl, formData, { headers: headers })\r\n      .toPromise()\r\n      .then((response) => response as Trip[])\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public updateTrip(formData: Trip): Promise<Trip[]> {\r\n    console.log('Inside TripDataService#updateTrip');\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${localStorage.getItem('travlr-token')}`,\r\n    });\r\n    return this.http\r\n      .put(this.tripUrl + formData.code, formData, { headers: headers })\r\n      .toPromise()\r\n      .then((response) => response as Trip[])\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private handleError(error: any): Promise<any> {\r\n    console.error('Something has gone wrong', error);\r\n    return Promise.reject(error.message || error);\r\n  }\r\n\r\n  public login(user: User): Promise<AuthResponse> {\r\n    return this.makeAuthApiCall('login', user);\r\n  }\r\n\r\n  public register(user: User): Promise<AuthResponse> {\r\n    return this.makeAuthApiCall('register', user);\r\n  }\r\n\r\n  private makeAuthApiCall(urlPath: string, user: User): Promise<AuthResponse> {\r\n    const url: string = `${this.apiBaseUrl}/${urlPath}`;\r\n    return this.http\r\n      .post(url, user)\r\n      .toPromise()\r\n      .then((response) => response as AuthResponse)\r\n      .catch(this.handleError);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}