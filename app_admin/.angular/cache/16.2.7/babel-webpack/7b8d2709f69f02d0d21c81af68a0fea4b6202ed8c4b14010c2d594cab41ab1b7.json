{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/authentication.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction NavbarComponent_a_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 12)(1, \"span\", 13);\n    i0.ɵɵtext(2, \"Log In\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NavbarComponent_a_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 14);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_a_13_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onLogout());\n    });\n    i0.ɵɵelementStart(1, \"span\", 13);\n    i0.ɵɵtext(2, \"Log Out\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class NavbarComponent {\n  constructor(authenticationService) {\n    this.authenticationService = authenticationService;\n  }\n  ngOnInit() {}\n  isLoggedIn() {\n    return this.authenticationService.isLoggedIn();\n  }\n  onLogout() {\n    return this.authenticationService.logout();\n  }\n  static #_ = this.ɵfac = function NavbarComponent_Factory(t) {\n    return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavbarComponent,\n    selectors: [[\"app-navbar\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[1, \"navbar\", \"navbar-expand\", \"navbar-light\", \"bg-light\"], [\"href\", \"#\", 1, \"navbar-brand\"], [\"src\", \"/assets/images/logo.png\"], [\"type\", \"button\", \"datatoggle\", \"collapse\", \"data-target\", \"#navbarNavAltMarkup\", \"ariacontrols\", \"navbarNavAltMarkup\", \"aria-expanded\", \"false\", \"arialabel\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarNavAltMarkup\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\"], [\"routerLink\", \"list-trips\", 1, \"nav-item\", \"nav-link\", \"active\"], [1, \"sr-only\"], [1, \"navbar-end\"], [\"class\", \"navbar-item\", \"routerLink\", \"login\", 4, \"ngIf\"], [\"class\", \"navbar-item\", 3, \"click\", 4, \"ngIf\"], [\"routerLink\", \"login\", 1, \"navbar-item\"], [1, \"has-icon-left\"], [1, \"navbar-item\", 3, \"click\"]],\n    template: function NavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"a\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵelement(4, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"div\", 6)(7, \"a\", 7);\n        i0.ɵɵtext(8, \"Trips\");\n        i0.ɵɵelementStart(9, \"span\", 8);\n        i0.ɵɵtext(10, \"(current)\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵtemplate(12, NavbarComponent_a_12_Template, 3, 0, \"a\", 10);\n        i0.ɵɵtemplate(13, NavbarComponent_a_13_Template, 3, 0, \"a\", 11);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn());\n      }\n    },\n    dependencies: [i2.NgIf, i3.RouterLink],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","NavbarComponent_a_13_Template_a_click_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","onLogout","NavbarComponent","constructor","authenticationService","ngOnInit","isLoggedIn","logout","_","ɵɵdirectiveInject","i1","AuthenticationService","_2","selectors","decls","vars","consts","template","NavbarComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","NavbarComponent_a_12_Template","NavbarComponent_a_13_Template","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\jpi\\source\\repos\\CS-465 Travlr project\\travlr\\app_admin\\src\\app\\navbar\\navbar.component.ts","C:\\Users\\jpi\\source\\repos\\CS-465 Travlr project\\travlr\\app_admin\\src\\app\\navbar\\navbar.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  constructor(private authenticationService: AuthenticationService) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  public isLoggedIn(): boolean {\r\n    return this.authenticationService.isLoggedIn();\r\n  }\r\n\r\n  protected onLogout(): void {\r\n    return this.authenticationService.logout();\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" href=\"#\"><img src=\"/assets/images/logo.png\" /></a>\r\n  <button\r\n    class=\"navbar-toggler\"\r\n    type=\"button\"\r\n    datatoggle=\"collapse\"\r\n    data-target=\"#navbarNavAltMarkup\"\r\n    ariacontrols=\"navbarNavAltMarkup\"\r\n    aria-expanded=\"false\"\r\n    arialabel=\"Toggle navigation\"\r\n  >\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link active\" routerLink=\"list-trips\"\r\n        >Trips<span class=\"sr-only\">(current)</span></a\r\n      >\r\n    </div>\r\n  </div>\r\n  <div class=\"navbar-end\">\r\n    <a class=\"navbar-item\" routerLink=\"login\" *ngIf=\"!isLoggedIn()\">\r\n      <span class=\"has-icon-left\">Log In</span>\r\n    </a>\r\n    <a class=\"navbar-item\" (click)=\"onLogout()\" *ngIf=\"isLoggedIn()\">\r\n      <span class=\"has-icon-left\">Log Out</span>\r\n    </a>\r\n  </div>\r\n</nav>\r\n"],"mappings":";;;;;;ICqBIA,EAAA,CAAAC,cAAA,YAAgE;IAClCD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;;IAE3CH,EAAA,CAAAC,cAAA,YAAiE;IAA1CD,EAAA,CAAAI,UAAA,mBAAAC,iDAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAR,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAU,WAAA,CAAAF,MAAA,CAAAG,QAAA,EAAU;IAAA,EAAC;IACzCX,EAAA,CAAAC,cAAA,eAA4B;IAAAD,EAAA,CAAAE,MAAA,cAAO;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;ADjBhD,OAAM,MAAOS,eAAe;EAC1BC,YAAoBC,qBAA4C;IAA5C,KAAAA,qBAAqB,GAArBA,qBAAqB;EAA0B;EAEnEC,QAAQA,CAAA,GAAI;EAELC,UAAUA,CAAA;IACf,OAAO,IAAI,CAACF,qBAAqB,CAACE,UAAU,EAAE;EAChD;EAEUL,QAAQA,CAAA;IAChB,OAAO,IAAI,CAACG,qBAAqB,CAACG,MAAM,EAAE;EAC5C;EAAC,QAAAC,CAAA,G;qBAXUN,eAAe,EAAAZ,EAAA,CAAAmB,iBAAA,CAAAC,EAAA,CAAAC,qBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAfV,eAAe;IAAAW,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR5B7B,EAAA,CAAAC,cAAA,aAAwD;QACrBD,EAAA,CAAA+B,SAAA,aAAqC;QAAA/B,EAAA,CAAAG,YAAA,EAAI;QAC1EH,EAAA,CAAAC,cAAA,gBAQC;QACCD,EAAA,CAAA+B,SAAA,cAAyC;QAC3C/B,EAAA,CAAAG,YAAA,EAAS;QACTH,EAAA,CAAAC,cAAA,aAA8D;QAGvDD,EAAA,CAAAE,MAAA,YAAK;QAAAF,EAAA,CAAAC,cAAA,cAAsB;QAAAD,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAO;QAIlDH,EAAA,CAAAC,cAAA,cAAwB;QACtBD,EAAA,CAAAgC,UAAA,KAAAC,6BAAA,gBAEI;QACJjC,EAAA,CAAAgC,UAAA,KAAAE,6BAAA,gBAEI;QACNlC,EAAA,CAAAG,YAAA,EAAM;;;QANuCH,EAAA,CAAAmC,SAAA,IAAmB;QAAnBnC,EAAA,CAAAoC,UAAA,UAAAN,GAAA,CAAAd,UAAA,GAAmB;QAGjBhB,EAAA,CAAAmC,SAAA,GAAkB;QAAlBnC,EAAA,CAAAoC,UAAA,SAAAN,GAAA,CAAAd,UAAA,GAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}